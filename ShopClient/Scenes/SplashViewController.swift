//
//  SplashViewController.swift
//  ShopClient
//
//  Created by Evgeniy Antonov on 10/6/17.
//  Copyright (c) 2017 Evgeniy Antonov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SplashDisplayLogic: class {
    func displayShopInfo(viewModel: Splash.Something.ViewModel)
}

class SplashViewController: UIViewController, SplashDisplayLogic {
    var interactor: SplashBusinessLogic?
    var router: (NSObjectProtocol & SplashRoutingLogic & SplashDataPassing)?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = SplashInteractor()
        let presenter = SplashPresenter()
        let router = SplashRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        loadShopInfo()
    }
    
    func loadShopInfo() {
        let request = Splash.Something.Request()
        interactor?.loadShopInfo(request: request)
    }
    
    func displayShopInfo(viewModel: Splash.Something.ViewModel) {
        router?.routeToHome()
    }
}
